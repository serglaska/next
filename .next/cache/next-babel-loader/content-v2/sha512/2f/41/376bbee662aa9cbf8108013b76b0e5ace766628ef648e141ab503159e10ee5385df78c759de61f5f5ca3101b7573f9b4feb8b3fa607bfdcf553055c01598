{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lovelace/myOwnProjects/next/pages/events/[...slug].js\";\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { EventList } from '../../components/events/event-list';\nimport { getFilteredEvents } from '../dummy-data';\nimport ResultsTitle from '../../components/events/results-title';\nimport { Button } from '../../components/ui'; ///////////////////////////////////////////////////\n\nconst FilteredEvents = () => {\n  const router = useRouter();\n  const urlData = router.query.slug;\n  if (!urlData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this);\n  const year = Number(urlData[0]);\n  const month = Number(urlData[1]);\n  if (isNaN(year) || isNaN(month) || year < 2020 || year > 2030 || month < 1 || month > 12) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Invalid date... Please, try again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n  const filteredEvents = getFilteredEvents({\n    year,\n    month\n  });\n  if (!filteredEvents || filteredEvents.length === 0) return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Not valid Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      link: \"/events\",\n      children: \"Show all Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n  const date = new Date(year, month - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\nexport default FilteredEvents;","map":{"version":3,"sources":["/home/lovelace/myOwnProjects/next/pages/events/[...slug].js"],"names":["Fragment","useRouter","EventList","getFilteredEvents","ResultsTitle","Button","FilteredEvents","router","urlData","query","slug","year","Number","month","isNaN","filteredEvents","length","date","Date"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB,C,CACA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAMO,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAA7B;AACA,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,QAAMG,IAAI,GAAGC,MAAM,CAACJ,OAAO,CAAC,CAAD,CAAR,CAAnB;AACA,QAAMK,KAAK,GAAGD,MAAM,CAACJ,OAAO,CAAC,CAAD,CAAR,CAApB;AAEA,MAAIM,KAAK,CAACH,IAAD,CAAL,IAAeG,KAAK,CAACD,KAAD,CAApB,IAA+BF,IAAI,GAAG,IAAtC,IAA8CA,IAAI,GAAG,IAArD,IAA6DE,KAAK,GAAG,CAArE,IAA0EA,KAAK,GAAG,EAAtF,EAA0F,oBACxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwF;AAG1F,QAAME,cAAc,GAAGZ,iBAAiB,CAAC;AAAEQ,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,CAAxC;AAEA,MAAI,CAACE,cAAD,IAAmBA,cAAc,CAACC,MAAf,KAA0B,CAAjD,EAAoD,oBAClD,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADkD;AASpD,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASP,IAAT,EAAeE,KAAK,GAAG,CAAvB,CAAb;AAEA,sBAAO,QAAC,QAAD;AAAA,4BACL,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CA5BD;;AA6BA,eAAeT,cAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { EventList } from '../../components/events/event-list';\nimport { getFilteredEvents } from '../dummy-data';\nimport ResultsTitle from '../../components/events/results-title';\nimport { Button } from '../../components/ui';\n///////////////////////////////////////////////////\n\nconst FilteredEvents = () => {\n  const router = useRouter();\n\n  const urlData = router.query.slug;\n  if (!urlData) return <p>Loading...</p>;\n  const year = Number(urlData[0]);\n  const month = Number(urlData[1]);\n\n  if (isNaN(year) || isNaN(month) || year < 2020 || year > 2030 || month < 1 || month > 12) return (\n    <p>Invalid date... Please, try again</p>\n  );\n  const filteredEvents = getFilteredEvents({ year, month });\n\n  if (!filteredEvents || filteredEvents.length === 0) return (\n    <Fragment>\n      <p>Not valid Events</p>\n      <Button link='/events'>\n        Show all Events\n      </Button>\n    </Fragment>\n  )\n\n  const date = new Date(year, month - 1);\n\n  return <Fragment>\n    <ResultsTitle date={date} />\n    <EventList events={filteredEvents} />\n  </Fragment>\n};\nexport default FilteredEvents;\n"]},"metadata":{},"sourceType":"module"}