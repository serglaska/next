{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lovelace/myOwnProjects/next/pages/events/[...slug].js\";\nimport { useRouter } from 'next/router';\nimport { EventList } from '../../components/events/event-list';\nimport { getFilteredEvents } from '../dummy-data';\nimport ResultsTitle from '../../components/events/results-title'; ///////////////////////////////////////////////////\n\nconst FilteredEvents = () => {\n  const router = useRouter();\n  const urlData = router.query.slug;\n  if (!urlData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 24\n  }, this);\n  const year = Number(urlData[0]);\n  const month = Number(urlData[1]);\n  if (isNaN(year) || isNaN(month) || year < 2020 || year > 2030 || month < 1 || month > 12) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Invalid date... Please, try again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  const filteredEvents = getFilteredEvents({\n    year,\n    month\n  });\n  if (!filteredEvents || filteredEvents.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Not valid Events\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 62\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      events: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\nexport default FilteredEvents;","map":{"version":3,"sources":["/home/lovelace/myOwnProjects/next/pages/events/[...slug].js"],"names":["useRouter","EventList","getFilteredEvents","ResultsTitle","FilteredEvents","router","urlData","query","slug","year","Number","month","isNaN","filteredEvents","length"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CACA;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAMM,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAA7B;AACA,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,QAAMG,IAAI,GAAGC,MAAM,CAACJ,OAAO,CAAC,CAAD,CAAR,CAAnB;AACA,QAAMK,KAAK,GAAGD,MAAM,CAACJ,OAAO,CAAC,CAAD,CAAR,CAApB;AAEA,MAAIM,KAAK,CAACH,IAAD,CAAL,IAAeG,KAAK,CAACD,KAAD,CAApB,IAA+BF,IAAI,GAAG,IAAtC,IAA8CA,IAAI,GAAG,IAArD,IAA6DE,KAAK,GAAG,CAArE,IAA0EA,KAAK,GAAG,EAAtF,EAA0F,oBACxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwF;AAG1F,QAAME,cAAc,GAAGX,iBAAiB,CAAC;AAAEO,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,CAAxC;AAEA,MAAI,CAACE,cAAD,IAAmBA,cAAc,CAACC,MAAf,KAA0B,CAAjD,EAAoD,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEpD,sBAAO,QAAC,QAAD;AAAA,2BACL,QAAC,SAAD;AAAW,MAAA,MAAM,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAlBD;;AAmBA,eAAeT,cAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { EventList } from '../../components/events/event-list';\nimport { getFilteredEvents } from '../dummy-data';\nimport ResultsTitle from '../../components/events/results-title';\n///////////////////////////////////////////////////\n\nconst FilteredEvents = () => {\n  const router = useRouter();\n\n  const urlData = router.query.slug;\n  if (!urlData) return <p>Loading...</p>;\n  const year = Number(urlData[0]);\n  const month = Number(urlData[1]);\n\n  if (isNaN(year) || isNaN(month) || year < 2020 || year > 2030 || month < 1 || month > 12) return (\n    <p>Invalid date... Please, try again</p>\n  );\n  const filteredEvents = getFilteredEvents({ year, month });\n\n  if (!filteredEvents || filteredEvents.length === 0) return <p>Not valid Events</p>\n\n  return <Fragment>\n    <EventList events={filteredEvents} />\n  </Fragment>\n};\nexport default FilteredEvents;\n"]},"metadata":{},"sourceType":"module"}