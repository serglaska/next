{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lovelace/myOwnProjects/next/pages/events/[...slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { EventList } from '../../components/events/event-list';\nimport { getFilteredEvents } from '../dummy-data';\nimport ResultsTitle from '../../components/events/results-title';\nimport { Button } from '../../components/ui';\nimport ErrorAlert from '../../components/ui/error-alert'; ///////////////////////////////////////////////////\n\nvar FilteredEvents = function FilteredEvents() {\n  _s();\n\n  var router = useRouter();\n  var urlData = router.query.slug;\n  if (!urlData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 24\n  }, _this);\n  var year = Number(urlData[0]);\n  var month = Number(urlData[1]);\n  if (isNaN(year) || isNaN(month) || year < 2020 || year > 2030 || month < 1 || month > 12) return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        link: \"/events\",\n        children: \"Show all Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invalid date... Please, try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n  var filteredEvents = getFilteredEvents({\n    year: year,\n    month: month\n  });\n  if (!filteredEvents || filteredEvents.length === 0) return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not valid Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        link: \"/events\",\n        children: \"Show all Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n  var date = new Date(year, month - 1);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(FilteredEvents, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEvents;\nexport default FilteredEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEvents\");","map":{"version":3,"sources":["/home/lovelace/myOwnProjects/next/pages/events/[...slug].js"],"names":["Fragment","useRouter","EventList","getFilteredEvents","ResultsTitle","Button","ErrorAlert","FilteredEvents","router","urlData","query","slug","year","Number","month","isNaN","filteredEvents","length","date","Date"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,iCAAvB,C,CACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAC3B,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,MAAMQ,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAA7B;AACA,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACd,MAAMG,IAAI,GAAGC,MAAM,CAACJ,OAAO,CAAC,CAAD,CAAR,CAAnB;AACA,MAAMK,KAAK,GAAGD,MAAM,CAACJ,OAAO,CAAC,CAAD,CAAR,CAApB;AAEA,MAAIM,KAAK,CAACH,IAAD,CAAL,IAAeG,KAAK,CAACD,KAAD,CAApB,IAA+BF,IAAI,GAAG,IAAtC,IAA8CA,IAAI,GAAG,IAArD,IAA6DE,KAAK,GAAG,CAArE,IAA0EA,KAAK,GAAG,EAAtF,EAA0F,oBACxF,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,UAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADwF;AAY1F,MAAME,cAAc,GAAGb,iBAAiB,CAAC;AAAES,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA;AAAR,GAAD,CAAxC;AAEA,MAAI,CAACE,cAAD,IAAmBA,cAAc,CAACC,MAAf,KAA0B,CAAjD,EAAoD,oBAClD,QAAC,QAAD;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADkD;AAapD,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASP,IAAT,EAAeE,KAAK,GAAG,CAAvB,CAAb;AAEA,sBAAO,QAAC,QAAD;AAAA,4BACL,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,aADK,eAEL,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,aAFK;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAID,CAzCD;;GAAMT,c;UACWN,S;;;KADXM,c;AA0CN,eAAeA,cAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { EventList } from '../../components/events/event-list';\nimport { getFilteredEvents } from '../dummy-data';\nimport ResultsTitle from '../../components/events/results-title';\nimport { Button } from '../../components/ui';\nimport ErrorAlert from '../../components/ui/error-alert';\n///////////////////////////////////////////////////\n\nconst FilteredEvents = () => {\n  const router = useRouter();\n\n  const urlData = router.query.slug;\n  if (!urlData) return <p>Loading...</p>;\n  const year = Number(urlData[0]);\n  const month = Number(urlData[1]);\n\n  if (isNaN(year) || isNaN(month) || year < 2020 || year > 2030 || month < 1 || month > 12) return (\n    <Fragment>\n      <div className='center'>\n        <Button link='/events'>\n          Show all Events\n        </Button>\n      </div>\n      <ErrorAlert>\n        <p>Invalid date... Please, try again</p>\n      </ErrorAlert>\n    </Fragment>\n  );\n  const filteredEvents = getFilteredEvents({ year, month });\n\n  if (!filteredEvents || filteredEvents.length === 0) return (\n    <Fragment>\n      <ErrorAlert>\n        <p>Not valid Events</p>\n      </ErrorAlert>\n      <div className='center'>\n        <Button link='/events'>\n          Show all Events\n        </Button>\n      </div>\n    </Fragment>\n  )\n\n  const date = new Date(year, month - 1);\n\n  return <Fragment>\n    <ResultsTitle date={date} />\n    <EventList events={filteredEvents} />\n  </Fragment>\n};\nexport default FilteredEvents;\n"]},"metadata":{},"sourceType":"module"}